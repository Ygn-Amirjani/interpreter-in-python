Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AND
    ASSIGN
    BIGGER
    COLON
    COMMA
    DECREASE_ABBREVIATION
    DIVISION_ABBREVIATION
    EQUAL
    IDENT
    LARGER_EQUALS
    LBRACKET
    LCURLYBRACKET
    MINUSMINUS
    MULTIPLICATION_ABBREVIATION
    NOT
    OR
    PLURAL_ABBREVIATION
    PLUSPLUS
    RBRACKET
    RCURLYBRACKET
    REMAININ
    REMAININ_ABBREVIATION
    SEMICOLON
    SMALLER
    SMALLER_EQUALS
    UNEQUAL

Grammar

Rule 0     S' -> expression
Rule 1     expression -> expression TOTAL term
Rule 2     expression -> expression MINUS term
Rule 3     expression -> term
Rule 4     term -> term MULTIPLICATION factor
Rule 5     term -> term DIVISION factor
Rule 6     term -> factor
Rule 7     factor -> INT
Rule 8     factor -> LPAREN expression RPAREN

Terminals, with rules where they appear

AND                  : 
ASSIGN               : 
BIGGER               : 
COLON                : 
COMMA                : 
DECREASE_ABBREVIATION : 
DIVISION             : 5
DIVISION_ABBREVIATION : 
EQUAL                : 
IDENT                : 
INT                  : 7
LARGER_EQUALS        : 
LBRACKET             : 
LCURLYBRACKET        : 
LPAREN               : 8
MINUS                : 2
MINUSMINUS           : 
MULTIPLICATION       : 4
MULTIPLICATION_ABBREVIATION : 
NOT                  : 
OR                   : 
PLURAL_ABBREVIATION  : 
PLUSPLUS             : 
RBRACKET             : 
RCURLYBRACKET        : 
REMAININ             : 
REMAININ_ABBREVIATION : 
RPAREN               : 8
SEMICOLON            : 
SMALLER              : 
SMALLER_EQUALS       : 
TOTAL                : 1
UNEQUAL              : 
error                : 

Nonterminals, with rules where they appear

expression           : 1 2 8 0
factor               : 4 5 6
term                 : 1 2 3 4 5

Parsing method: LALR

state 0

    (0) S' -> . expression
    (1) expression -> . expression TOTAL term
    (2) expression -> . expression MINUS term
    (3) expression -> . term
    (4) term -> . term MULTIPLICATION factor
    (5) term -> . term DIVISION factor
    (6) term -> . factor
    (7) factor -> . INT
    (8) factor -> . LPAREN expression RPAREN

    INT             shift and go to state 4
    LPAREN          shift and go to state 5

    expression                     shift and go to state 1
    term                           shift and go to state 2
    factor                         shift and go to state 3

state 1

    (0) S' -> expression .
    (1) expression -> expression . TOTAL term
    (2) expression -> expression . MINUS term

    TOTAL           shift and go to state 6
    MINUS           shift and go to state 7


state 2

    (3) expression -> term .
    (4) term -> term . MULTIPLICATION factor
    (5) term -> term . DIVISION factor

    TOTAL           reduce using rule 3 (expression -> term .)
    MINUS           reduce using rule 3 (expression -> term .)
    $end            reduce using rule 3 (expression -> term .)
    RPAREN          reduce using rule 3 (expression -> term .)
    MULTIPLICATION  shift and go to state 8
    DIVISION        shift and go to state 9


state 3

    (6) term -> factor .

    MULTIPLICATION  reduce using rule 6 (term -> factor .)
    DIVISION        reduce using rule 6 (term -> factor .)
    TOTAL           reduce using rule 6 (term -> factor .)
    MINUS           reduce using rule 6 (term -> factor .)
    $end            reduce using rule 6 (term -> factor .)
    RPAREN          reduce using rule 6 (term -> factor .)


state 4

    (7) factor -> INT .

    MULTIPLICATION  reduce using rule 7 (factor -> INT .)
    DIVISION        reduce using rule 7 (factor -> INT .)
    TOTAL           reduce using rule 7 (factor -> INT .)
    MINUS           reduce using rule 7 (factor -> INT .)
    $end            reduce using rule 7 (factor -> INT .)
    RPAREN          reduce using rule 7 (factor -> INT .)


state 5

    (8) factor -> LPAREN . expression RPAREN
    (1) expression -> . expression TOTAL term
    (2) expression -> . expression MINUS term
    (3) expression -> . term
    (4) term -> . term MULTIPLICATION factor
    (5) term -> . term DIVISION factor
    (6) term -> . factor
    (7) factor -> . INT
    (8) factor -> . LPAREN expression RPAREN

    INT             shift and go to state 4
    LPAREN          shift and go to state 5

    expression                     shift and go to state 10
    term                           shift and go to state 2
    factor                         shift and go to state 3

state 6

    (1) expression -> expression TOTAL . term
    (4) term -> . term MULTIPLICATION factor
    (5) term -> . term DIVISION factor
    (6) term -> . factor
    (7) factor -> . INT
    (8) factor -> . LPAREN expression RPAREN

    INT             shift and go to state 4
    LPAREN          shift and go to state 5

    term                           shift and go to state 11
    factor                         shift and go to state 3

state 7

    (2) expression -> expression MINUS . term
    (4) term -> . term MULTIPLICATION factor
    (5) term -> . term DIVISION factor
    (6) term -> . factor
    (7) factor -> . INT
    (8) factor -> . LPAREN expression RPAREN

    INT             shift and go to state 4
    LPAREN          shift and go to state 5

    term                           shift and go to state 12
    factor                         shift and go to state 3

state 8

    (4) term -> term MULTIPLICATION . factor
    (7) factor -> . INT
    (8) factor -> . LPAREN expression RPAREN

    INT             shift and go to state 4
    LPAREN          shift and go to state 5

    factor                         shift and go to state 13

state 9

    (5) term -> term DIVISION . factor
    (7) factor -> . INT
    (8) factor -> . LPAREN expression RPAREN

    INT             shift and go to state 4
    LPAREN          shift and go to state 5

    factor                         shift and go to state 14

state 10

    (8) factor -> LPAREN expression . RPAREN
    (1) expression -> expression . TOTAL term
    (2) expression -> expression . MINUS term

    RPAREN          shift and go to state 15
    TOTAL           shift and go to state 6
    MINUS           shift and go to state 7


state 11

    (1) expression -> expression TOTAL term .
    (4) term -> term . MULTIPLICATION factor
    (5) term -> term . DIVISION factor

    TOTAL           reduce using rule 1 (expression -> expression TOTAL term .)
    MINUS           reduce using rule 1 (expression -> expression TOTAL term .)
    $end            reduce using rule 1 (expression -> expression TOTAL term .)
    RPAREN          reduce using rule 1 (expression -> expression TOTAL term .)
    MULTIPLICATION  shift and go to state 8
    DIVISION        shift and go to state 9


state 12

    (2) expression -> expression MINUS term .
    (4) term -> term . MULTIPLICATION factor
    (5) term -> term . DIVISION factor

    TOTAL           reduce using rule 2 (expression -> expression MINUS term .)
    MINUS           reduce using rule 2 (expression -> expression MINUS term .)
    $end            reduce using rule 2 (expression -> expression MINUS term .)
    RPAREN          reduce using rule 2 (expression -> expression MINUS term .)
    MULTIPLICATION  shift and go to state 8
    DIVISION        shift and go to state 9


state 13

    (4) term -> term MULTIPLICATION factor .

    MULTIPLICATION  reduce using rule 4 (term -> term MULTIPLICATION factor .)
    DIVISION        reduce using rule 4 (term -> term MULTIPLICATION factor .)
    TOTAL           reduce using rule 4 (term -> term MULTIPLICATION factor .)
    MINUS           reduce using rule 4 (term -> term MULTIPLICATION factor .)
    $end            reduce using rule 4 (term -> term MULTIPLICATION factor .)
    RPAREN          reduce using rule 4 (term -> term MULTIPLICATION factor .)


state 14

    (5) term -> term DIVISION factor .

    MULTIPLICATION  reduce using rule 5 (term -> term DIVISION factor .)
    DIVISION        reduce using rule 5 (term -> term DIVISION factor .)
    TOTAL           reduce using rule 5 (term -> term DIVISION factor .)
    MINUS           reduce using rule 5 (term -> term DIVISION factor .)
    $end            reduce using rule 5 (term -> term DIVISION factor .)
    RPAREN          reduce using rule 5 (term -> term DIVISION factor .)


state 15

    (8) factor -> LPAREN expression RPAREN .

    MULTIPLICATION  reduce using rule 8 (factor -> LPAREN expression RPAREN .)
    DIVISION        reduce using rule 8 (factor -> LPAREN expression RPAREN .)
    TOTAL           reduce using rule 8 (factor -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 8 (factor -> LPAREN expression RPAREN .)
    $end            reduce using rule 8 (factor -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 8 (factor -> LPAREN expression RPAREN .)

